import pandas as pd
py_install("pandas",pip=TRUE)
import pandas as pd
import pandas as pd
#| eval: true
import pandas as pd
reticulate::use_python("/usr/bin/python3", required = TRUE)
reticulate::use_python("/usr/bin/python3", required = TRUE)
reticulate::py_config()
reticulate::py_config()
import sys
print(sys.executable)  # Powinno pokazać ścieżkę do używanego Pythona
import pandas as pd
print(pd.__version__)  # Powinna wyświetlić się wersja pandas
import sys
print(sys.executable)  # Powinno pokazać ścieżkę do używanego Pythona
import pandas
print(pd.__version__)  # Powinna wyświetlić się wersja pandas
import sys
print(sys.executable)  # Powinno pokazać ścieżkę do używanego Pythona
# Powinna wyświetlić się wersja pandas
import pandas as pd
import pandas as pd
import pandas as pd
import numpy as np
import pandas as pd
import numpy as np
import pandas as pd
import numpy as np
data = pd.read_csv('small_portfolio.csv')
print(type(data))  # Sprawdzenie, czy to DataFrame
print(data.head())
print(type(data))  # Sprawdzenie, czy to DataFrame
print(data.head())
print(data.dtypes)
import pandas as pd
import numpy as np
data = pd.read_csv('small_portfolio.csv')
data["date"] = pd.to_datetime(data["date"])
print(type(data))  # Sprawdzenie, czy to DataFrame
print(data.head())
print(data.dtypes)
import pandas as pd
import numpy as np
data = pd.read_csv('small_portfolio.csv')
numeric_data = data.drop(columns=["date"])
print(type(data))  # Sprawdzenie, czy to DataFrame
print(data.head())
numeric_data = data.drop(columns=["date"])
print(type(data))  # Sprawdzenie, czy to DataFrame
print(data.head())
data = data.dropna()
import pandas as pd
import numpy as np
# Wczytanie danych
data = pd.read_csv("small_portfolio.csv")
# Zamiana daty na datetime
data["date"] = pd.to_datetime(data["date"], errors="coerce")
# Konwertuj dane na liczby
data = data.apply(pd.to_numeric, errors='coerce')
# Sprawdzenie, czy są NaN
print(data.isna().sum())  # Jeśli NaN, możesz wypełnić lub usunąć
# Usunięcie NaN (jeśli są)
data = data.dropna()
# Oblicz procentowe zmiany
returns = data.pct_change()
# Podgląd wyników
print(returns.head())
import pandas as pd
import numpy as np
# Wczytanie danych
data = pd.read_csv("small_portfolio.csv")
# Zamiana daty na datetime
data["date"] = pd.to_datetime(data["date"], errors="coerce")
# Konwertuj dane na liczby
data = data.apply(pd.to_numeric, errors='coerce')
# Sprawdzenie, czy są NaN
print(data.isna().sum())  # Jeśli NaN, możesz wypełnić lub usunąć
# Usunięcie NaN (jeśli są)
# Oblicz procentowe zmiany
returns = data.pct_change()
# Podgląd wyników
print(returns.head())
import pandas as pd
import numpy as np
data = pd.read_csv('small_portfolio.csv')
data = data[1:]
import pandas as pd
import numpy as np
data = pd.read_csv('small_portfolio.csv')
data["date"] = pd.to_datetime(data["date"], errors="coerce")
import pandas as pd
import numpy as np
# Wczytanie danych
data = pd.read_csv("small_portfolio.csv")
# Zamiana daty na datetime
# data["date"] = pd.to_datetime(data["date"], errors="coerce")
# Konwertuj dane na liczby
data = data.apply(pd.to_numeric, errors='coerce')
# Sprawdzenie, czy są NaN
print(data.isna().sum())  # Jeśli NaN, możesz wypełnić lub usunąć
# Usunięcie NaN (jeśli są)
# Oblicz procentowe zmiany
returns = data.pct_change()
# Podgląd wyników
print(returns.head())
import pandas as pd
import numpy as np
# Wczytanie danych
data = pd.read_csv("small_portfolio.csv")
# Zamiana daty na datetime
# data["date"] = pd.to_datetime(data["date"], errors="coerce")
# Konwertuj dane na liczby
# data = data.apply(pd.to_numeric, errors='coerce')
# Sprawdzenie, czy są NaN
print(data.isna().sum())  # Jeśli NaN, możesz wypełnić lub usunąć
# Usunięcie NaN (jeśli są)
# Oblicz procentowe zmiany
returns = data.pct_change()
# Podgląd wyników
print(returns.head())
import pandas as pd
import numpy as np
data = pd.read_csv('small_portfolio.csv')
numeric_data = data.drop(columns=["date"])
import pandas as pd
import numpy as np
# Wczytaj dane
data = pd.read_csv("small_portfolio.csv")
# Zamień 'date' na format datetime (jeśli potrzebujesz później)
data["date"] = pd.to_datetime(data["date"], errors="coerce")
# Oddziel kolumnę 'date' od danych liczbowych
numeric_data = data.drop(columns=["date"])
# Oblicz procentowe zmiany na liczbach
returns = numeric_data.pct_change()
# Wyświetl procentowe zmiany
print(returns.head())
import pandas as pd
import numpy as np
data = pd.read_csv('small_portfolio.csv')
numeric_data = data.drop(columns=["date"])
returns = numeric_data.pct_change()
meanDailyReturns = returns.mean()
weights = np.array([0.5, 0.2, 0.2, 0.1])
portReturn = np.sum(weights*meanDailyReturns)
returns = data[1:].pct_change()
meanDailyReturns = returns.mean()
weights = np.array([0.5, 0.2, 0.2, 0.1])
portReturn = np.sum(weights*meanDailyReturns)
returns = data.pct_change()
meanDailyReturns = returns.mean()
weights = np.array([0.5, 0.2, 0.2, 0.1])
portReturn = np.sum(weights*meanDailyReturns)
import pandas as pd
import numpy as np
data = pd.read_csv('small_portfolio.csv')
numeric_data = data.drop(columns=["date"])
returns = numeric_data.pct_change()
meanDailyReturns = returns.mean()
weights = np.array([0.5, 0.2, 0.2, 0.1])
portReturn = np.sum(weights*meanDailyReturns)
returns = numeric_data.pct_change()
meanDailyReturns = returns.mean()
weights = np.array([0.5, 0.2, 0.2, 0.1])
portReturn = np.sum(weights*meanDailyReturns)
returns = numeric_data.pct_change()
meanDailyReturns = returns.mean()
weights = np.array([0.5, 0.2, 0.2, 0.1])
portReturn = np.sum(weights*meanDailyReturns)
portReturn
returns = numeric_data.pct_change()
returns = numeric_data.pct_change()
returns
returns = numeric_data.pct_change()
returns.head()
meanDailyReturns = returns.mean()
meanDailyReturns
weights = np.array([0.5, 0.2, 0.2, 0.1])
portReturn = np.sum(weights*meanDailyReturns)
portReturn
returns = data.iloc[:, 1:].pct_change()
returns.head()
returns = data.iloc[:, 1:].pct_change()
returns.head()
import pandas as pd import numpy as np
data = pd.DataFrame({ 'date': ['2021-01-01', '2021-01-02', '2021-01-03'], 'GE': [100, 102, 104], 'JPM': [50, 51, 53], 'MSFT': [200, 202, 206], 'PG': [60, 61, 63] })
data["date"] = pd.to_datetime(data["date"])
returns = data.pct_change()
returns
import pandas as pd
import numpy as np
data = pd.read_csv('small_portfolio.csv')
numeric_data = data.drop(columns=["date"])
returns = data.iloc[:, 1:].pct_change()
returns.head()
returns = data.iloc[:, 1:].pct_change()
returns.head()
returns.head()
returns = data.iloc[:, 1:].pct_change()
returns["date"] = data["date"]
returns.head()
import pandas as pd
import numpy as np
data = pd.read_csv('small_portfolio.csv')
numeric_data = data.drop(columns=["date"])
returns = numeric_data.pct_change()
returns["date"] = data["date"]
returns.head()
returns = data.iloc[:, 1:].pct_change()
returns["date"] = data["date"]
import pandas as pd
import numpy as np
data = pd.read_csv('small_portfolio.csv')
numeric_data = data.drop(columns=["date"])
import pandas as pd
import numpy as np
data = pd.read_csv('small_portfolio.csv')
returns = data.iloc[:, 1:].pct_change()
returns["date"] = data["date"]
returns.head()
